# This workflow will publish a release

name: publish-release

on:
  push:
    tags:
      - 'v*'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      # See: https://github.com/magnetikonline/action-golang-cache
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  build-binary:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker Metadata action
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: merusso/netwait
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

        # See: https://github.com/magnetikonline/action-golang-cache
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Build multi-arch
        uses: thatisuday/go-cross-build@v1.1.0
        with:
          platforms: linux/amd64,darwin/amd64,windows/amd64
          name: netwait
          # Flags to pass to the Go linker.
          ldflags: "-X 'github.com/merusso/netwait/cmd.version=${{ steps.meta.outputs.version }}'"

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: netwait
          path: build/

  create-github-release:
    name: Create GitHub Release
    needs: build-binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: netwait
          path: build

      - name: Create Release
        run: gh release create ${{ github.ref }} --generate-notes build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker Metadata action
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: merusso/netwait
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: merusso
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}